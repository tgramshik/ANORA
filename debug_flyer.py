#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–≤–æ–π–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
"""
import asyncio
import logging
from aiogram import Bot
from config import API_TOKEN, FLYER_API_KEY
from flyer_service import init_flyer_service

# –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

async def test():
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Flyer Service\n")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = Bot(token=API_TOKEN)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º FlyerService
    flyer = init_flyer_service(FLYER_API_KEY, bot)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –≤–∞—à–∏–º ID
    test_user_id = 556828139
    
    print(f"\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ user_id: {test_user_id}")
    print("-" * 30)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ check()...")
    try:
        has_access = await flyer.check_user_access(test_user_id)
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç check_user_access: {has_access}")
        print(f"   –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(has_access)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞–Ω–∏—è
    print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π —á–µ—Ä–µ–∑ get_tasks()...")
    try:
        tasks = await flyer.get_user_tasks(test_user_id)
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞–Ω–∏–π: {len(tasks)}")
        print(f"   –ó–∞–¥–∞–Ω–∏—è: {tasks}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ API
    print("\n3Ô∏è‚É£ –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Flyer API...")
    try:
        from flyerapi import Flyer
        direct_flyer = Flyer(FLYER_API_KEY)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º check
        print("   –í—ã–∑–æ–≤ check()...")
        result = await direct_flyer.check(test_user_id, language_code="ru")
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º get_tasks (–º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É)
        print("   –í—ã–∑–æ–≤ get_tasks()...")
        try:
            tasks = await direct_flyer.get_tasks(test_user_id, language_code="ru", limit=5)
            print(f"   –ó–∞–¥–∞–Ω–∏—è: {tasks}")
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞ get_tasks (–æ–∂–∏–¥–∞–µ–º–æ): {e}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞: {e}")
    
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é
    await bot.session.close()
    
    print("\n" + "=" * 50)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(test())